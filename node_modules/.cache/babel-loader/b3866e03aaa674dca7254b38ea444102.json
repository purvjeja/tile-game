{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/tile-puzzle React/src/tilepuzzle.js\";\nimport { Component } from 'react';\nimport './tilepuzzle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass tilepuzzle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matrix: this.createRandomMatrix(),\n      // matrix :  [[1,2,3],[4,5,6],[7,0,8]],\n      // coordinatesOfEmpty : []\n      MoveCount: 0,\n      userName: \"\"\n    };\n  }\n\n  createRandomMatrix() {\n    let array = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n    let tmp,\n        current,\n        top = 9;\n\n    while (--top) {\n      current = parseInt(Math.random() * (top + 1));\n      tmp = array[current];\n      array[current] = array[top];\n      array[top] = tmp;\n    }\n\n    let twoDArray = [];\n\n    for (let i = 0; i < 9; i += 3) {\n      twoDArray.push([array[i], array[i + 1], array[i + 2]]);\n    }\n\n    return twoDArray;\n  }\n\n  componentDidMount() {\n    const Name = prompt(\"Hey, What's Your Name?\");\n\n    if (!Name) {\n      alert(\"Empty Name!\");\n      window.location.reload();\n    }\n\n    this.setState({\n      userName: Name\n    });\n    alert(\"Hey \" + Name + \", Just relax and try to solve this puzzle :) \"); // this.settingEmptyCoordinates();\n\n    this.DisplayBoxes();\n    this.addEventListnerToBoxes();\n  } // settingEmptyCoordinates(){\n  // let matrix = this.state.matrix;\n  // let i,j,flag=0;\n  // for(i = 0 ; i <= 2 ; i++){\n  //     for(j = 0 ; j <= 2 ; j++){ \n  //         if(matrix[i][j] === 0) { \n  //             flag=1;\n  //             break;\n  //         }\n  //     }\n  //     if(flag === 1) break;\n  // }\n  // this.setState({\n  //         coordinatesOfEmpty : [i,j]\n  //     });\n  // }\n\n\n  componentDidUpdate() {\n    this.checkResult();\n    document.getElementById('boxWithBoxes').innerHTML = \"\";\n    this.DisplayBoxes();\n    this.addEventListnerToBoxes();\n  }\n\n  checkResult() {\n    if (JSON.stringify(this.state.matrix) === JSON.stringify([[1, 2, 3], [4, 5, 6], [7, 8, 0]])) {\n      alert(\"Voila \" + this.state.userName + \",You have completed the puzzle in \" + this.state.MoveCount + \" moves :)\");\n      setTimeout(() => window.location.reload(), 20000);\n    }\n  }\n\n  DisplayBoxes() {\n    // console.log(this.state.matrix);\n    let matrix = this.state.matrix;\n\n    for (let i of matrix) {\n      for (let j of i) {\n        this.createBox(j);\n      }\n    }\n  }\n\n  createBox(id) {\n    let element = document.createElement('div');\n    element.id = id;\n    element.className = id === 0 ? \"emptyBox\" : \"boxes\";\n    element.innerText = id === 0 ? \"\" : id;\n    document.getElementById('boxWithBoxes').append(element);\n  }\n\n  addEventListnerToBoxes() {\n    let matrix = this.state.matrix;\n    let i,\n        j,\n        flag = 0;\n\n    for (i = 0; i <= 2; i++) {\n      for (j = 0; j <= 2; j++) {\n        if (matrix[i][j] === 0) {\n          flag = 1;\n          break;\n        }\n      }\n\n      if (flag === 1) break;\n    } // let [i,j] = [this.state.coordinatesOfEmpty[0],this.state.coordinatesOfEmpty[1]];\n\n\n    this.setRight(i, j);\n    this.setLeft(i, j);\n    this.setTop(i, j);\n    this.setDown(i, j);\n  }\n\n  setRight(i, j) {\n    if (j === 2) return;\n    j += 1; // console.log(\"right : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapWithEmpty(i, j - 1, i, j));\n  }\n\n  setLeft(i, j) {\n    if (j === 0) return;\n    j -= 1; // console.log(\"left :\" + i + \" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapWithEmpty(i, j + 1, i, j));\n  }\n\n  setDown(i, j) {\n    if (i === 2) return;\n    i += 1; // console.log(\"down : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapWithEmpty(i - 1, j, i, j));\n  }\n\n  setTop(i, j) {\n    if (i === 0) return;\n    i -= 1; // console.log(\"top : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapWithEmpty(i + 1, j, i, j));\n  }\n\n  swapWithEmpty(emptyCoordinateRow, emptyCoordinateColumn, row, column) {\n    let currentMatrix = this.state.matrix;\n    let temp = currentMatrix[row][column];\n    currentMatrix[row][column] = currentMatrix[emptyCoordinateRow][emptyCoordinateColumn];\n    currentMatrix[emptyCoordinateRow][emptyCoordinateColumn] = temp;\n    this.setState({\n      matrix: currentMatrix,\n      // coordinatesOfEmpty : [row,column]\n      MoveCount: this.state.MoveCount + 1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GameComponents\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"3 X 3 Tile Puzzle Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameDatas\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Moves : \", this.state.MoveCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainBox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"boxWithBoxes\",\n            className: \"innerBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default tilepuzzle;","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/tile-puzzle React/src/tilepuzzle.js"],"names":["Component","tilepuzzle","constructor","props","state","matrix","createRandomMatrix","MoveCount","userName","array","tmp","current","top","parseInt","Math","random","twoDArray","i","push","componentDidMount","Name","prompt","alert","window","location","reload","setState","DisplayBoxes","addEventListnerToBoxes","componentDidUpdate","checkResult","document","getElementById","innerHTML","JSON","stringify","setTimeout","j","createBox","id","element","createElement","className","innerText","append","flag","setRight","setLeft","setTop","setDown","addEventListener","swapWithEmpty","emptyCoordinateRow","emptyCoordinateColumn","row","column","currentMatrix","temp","render"],"mappings":"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","sourcesContent":["import {Component} from 'react';\nimport './tilepuzzle.css';\n\nclass tilepuzzle extends Component{ \n    constructor(props){\n        super(props);\n        this.state = {\n            matrix : this.createRandomMatrix(),\n            // matrix :  [[1,2,3],[4,5,6],[7,0,8]],\n            // coordinatesOfEmpty : []\n            MoveCount : 0,\n            userName : \"\"\n        }\n    }\n\n    createRandomMatrix(){\n        let array = [0,1,2,3,4,5,6,7,8];\n        let tmp, current, top = 9;\n        while(--top) {\n            current = parseInt(Math.random() * (top + 1));\n            tmp = array[current];\n            array[current] = array[top];\n            array[top] = tmp;\n        }\n\n        let twoDArray = [];\n        for(let i = 0 ; i < 9 ; i+=3) {\n            twoDArray.push([array[i],array[i+1],array[i+2]]);\n        } \n      return twoDArray;\n    }\n\n\n    componentDidMount(){\n        const Name = prompt(\"Hey, What's Your Name?\");\n        if(!Name){ \n            alert(\"Empty Name!\");\n            window.location.reload();\n        }\n        this.setState({\n            userName : Name\n        });\n        alert(\"Hey \"+ Name +\", Just relax and try to solve this puzzle :) \");\n        // this.settingEmptyCoordinates();\n        this.DisplayBoxes();\n        this.addEventListnerToBoxes();\n    }\n    // settingEmptyCoordinates(){\n        // let matrix = this.state.matrix;\n        // let i,j,flag=0;\n        // for(i = 0 ; i <= 2 ; i++){\n        //     for(j = 0 ; j <= 2 ; j++){ \n        //         if(matrix[i][j] === 0) { \n        //             flag=1;\n        //             break;\n        //         }\n        //     }\n        //     if(flag === 1) break;\n        // }\n        // this.setState({\n    //         coordinatesOfEmpty : [i,j]\n    //     });\n    // }\n\n    componentDidUpdate(){\n        this.checkResult();\n        document.getElementById('boxWithBoxes').innerHTML = \"\";\n        this.DisplayBoxes();    \n        this.addEventListnerToBoxes();\n    }\n\n    checkResult(){\n\n        if(JSON.stringify(this.state.matrix) === JSON.stringify([[1,2,3],[4,5,6],[7,8,0]])) {\n            alert(\"Voila \" +this.state.userName + \",You have completed the puzzle in \" + this.state.MoveCount + \" moves :)\");\n            setTimeout(() => window.location.reload(),20000);\n        }\n    }\n\n    DisplayBoxes(){\n        // console.log(this.state.matrix);\n        let matrix = this.state.matrix;\n        for(let i of matrix) {\n            for(let j of i) { \n                this.createBox(j);        \n            }\n        }\n    }\n\n    createBox(id){\n        let element = document.createElement('div');\n        element.id = id;\n        element.className = (id === 0 )? \"emptyBox\" : \"boxes\";\n        element.innerText = (id === 0)? \"\" : id;\n        document.getElementById('boxWithBoxes').append(element);\n    }\n\n    addEventListnerToBoxes(){\n        let matrix = this.state.matrix;\n        let i,j,flag=0;\n        for(i = 0 ; i <= 2 ; i++){\n            for(j = 0 ; j <= 2 ; j++){ \n                if(matrix[i][j] === 0) { \n                    flag=1;\n                    break;\n                }\n            }\n            if(flag === 1) break;\n        }\n    \n\n        // let [i,j] = [this.state.coordinatesOfEmpty[0],this.state.coordinatesOfEmpty[1]];\n        \n        this.setRight(i,j);\n        this.setLeft(i,j);\n        this.setTop(i,j);\n        this.setDown(i,j);\n    }\n\n    setRight(i,j) {\n        if(j === 2) return;\n        j+=1;\n        // console.log(\"right : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapWithEmpty(i,j-1,i,j));\n    }\n\n    setLeft(i,j) {\n        if(j === 0) return;\n        j-=1;\n        // console.log(\"left :\" + i + \" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapWithEmpty(i,j+1,i,j));\n    }\n\n    setDown(i,j) {\n        if(i === 2) return;\n        i+=1;\n        // console.log(\"down : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapWithEmpty(i-1,j,i,j));\n    }\n    setTop(i,j) {\n        if(i === 0) return;\n        i-=1;\n        // console.log(\"top : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapWithEmpty(i+1,j,i,j));\n    }\n\n    swapWithEmpty(emptyCoordinateRow,emptyCoordinateColumn,row,column) {\n        let currentMatrix = this.state.matrix;\n        let temp = currentMatrix[row][column];\n        currentMatrix[row][column] = currentMatrix[emptyCoordinateRow][emptyCoordinateColumn];\n        currentMatrix[emptyCoordinateRow][emptyCoordinateColumn] = temp;\n\n        this.setState({\n            matrix : currentMatrix,\n            // coordinatesOfEmpty : [row,column]\n            MoveCount : this.state.MoveCount+1,\n        });\n    }\n    \n    render(){\n        return(\n        <div>\n            <div className=\"GameComponents\">\n                <div className=\"heading\">\n                    <h1>3 X 3 Tile Puzzle Game</h1>\n                    <div className=\"gameDatas\">\n                        <h2>Moves : {this.state.MoveCount}</h2>\n                    </div>\n                </div>\n                <div className=\"mainBox\">\n                    <div id=\"boxWithBoxes\" className=\"innerBox\">\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default tilepuzzle;"]},"metadata":{},"sourceType":"module"}