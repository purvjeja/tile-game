{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/tile-puzzle/src/tilepuzzle.js\";\nimport { Component } from 'react';\nimport './tilepuzzle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass tilepuzzle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // matrix : this.createRandomMatrix(),\n      matrix: [[1, 2, 3], [4, 5, 6], [7, 0, 8]],\n      // coordinatesOfEmpty : []\n      count: 0\n    };\n  }\n\n  createRandomMatrix() {\n    let array = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n    let tmp,\n        current,\n        top = 9;\n\n    while (--top) {\n      current = parseInt(Math.random() * (top + 1));\n      tmp = array[current];\n      array[current] = array[top];\n      array[top] = tmp;\n    }\n\n    let twoDArray = [];\n\n    for (let i = 0; i < 9; i += 3) {\n      twoDArray.push([array[i], array[i + 1], array[i + 2]]);\n    }\n\n    return twoDArray;\n  }\n\n  componentDidMount() {\n    // this.settingEmptyCoordinates();\n    this.DisplayBoxes();\n    this.addEventListnerToBoxes();\n  } // settingEmptyCoordinates(){\n  // let matrix = this.state.matrix;\n  // let i,j,flag=0;\n  // for(i = 0 ; i <= 2 ; i++){\n  //     for(j = 0 ; j <= 2 ; j++){ \n  //         if(matrix[i][j] === 0) { \n  //             flag=1;\n  //             break;\n  //         }\n  //     }\n  //     if(flag === 1) break;\n  // }\n  // this.setState({\n  //         coordinatesOfEmpty : [i,j]\n  //     });\n  // }\n\n\n  componentDidUpdate() {\n    this.checkResult();\n    document.getElementById('boxWithBoxes').innerHTML = \"\";\n    this.DisplayBoxes();\n    this.addEventListnerToBoxes();\n  }\n\n  checkResult() {\n    if (this.state.matrix === [[1, 2, 3], [4, 5, 6], [7, 8, 0]]) {\n      alert(\"Voila,You have completed the puzzle in \" + this.state.count + \"moves :)\");\n      setTimeout(() => window.location.reload(), 4000);\n    }\n  }\n\n  DisplayBoxes() {\n    // console.log(this.state.matrix);\n    let matrix = this.state.matrix;\n\n    for (let i of matrix) {\n      for (let j of i) {\n        this.createBox(j);\n      }\n    }\n  }\n\n  createBox(id) {\n    let element = document.createElement('div');\n    element.id = id;\n    element.className = id === 0 ? \"emptyBox\" : \"boxes\";\n    element.innerText = id === 0 ? \"\" : id;\n    document.getElementById('boxWithBoxes').append(element);\n  }\n\n  addEventListnerToBoxes() {\n    let matrix = this.state.matrix;\n    let i,\n        j,\n        flag = 0;\n\n    for (i = 0; i <= 2; i++) {\n      for (j = 0; j <= 2; j++) {\n        if (matrix[i][j] === 0) {\n          flag = 1;\n          break;\n        }\n      }\n\n      if (flag === 1) break;\n    } // let [i,j] = [this.state.coordinatesOfEmpty[0],this.state.coordinatesOfEmpty[1]];\n\n\n    this.setRight(i, j);\n    this.setLeft(i, j);\n    this.setTop(i, j);\n    this.setDown(i, j);\n  }\n\n  setRight(i, j) {\n    if (j === 2) return;\n    j += 1; // console.log(\"right : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapWithEmpty(i, j - 1, i, j));\n  }\n\n  setLeft(i, j) {\n    if (j === 0) return;\n    j -= 1; // console.log(\"left :\" + i + \" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapWithEmpty(i, j + 1, i, j));\n  }\n\n  setDown(i, j) {\n    if (i === 2) return;\n    i += 1; // console.log(\"down : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapWithEmpty(i - 1, j, i, j));\n  }\n\n  setTop(i, j) {\n    if (i === 0) return;\n    i -= 1; // console.log(\"top : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapWithEmpty(i + 1, j, i, j));\n  }\n\n  swapWithEmpty(emptyCoordinateRow, emptyCoordinateColumn, row, column) {\n    let currentMatrix = this.state.matrix;\n    let temp = currentMatrix[row][column];\n    currentMatrix[row][column] = currentMatrix[emptyCoordinateRow][emptyCoordinateColumn];\n    currentMatrix[emptyCoordinateRow][emptyCoordinateColumn] = temp;\n    this.setState({\n      matrix: currentMatrix,\n      // coordinatesOfEmpty : [row,column]\n      count: this.state.count + 1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GameComponents\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"3 X 3 Tile Puzzle Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameDatas\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Moves : \", this.state.count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainBox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"boxWithBoxes\",\n            className: \"innerBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default tilepuzzle;","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/tile-puzzle/src/tilepuzzle.js"],"names":["Component","tilepuzzle","constructor","props","state","matrix","count","createRandomMatrix","array","tmp","current","top","parseInt","Math","random","twoDArray","i","push","componentDidMount","DisplayBoxes","addEventListnerToBoxes","componentDidUpdate","checkResult","document","getElementById","innerHTML","alert","setTimeout","window","location","reload","j","createBox","id","element","createElement","className","innerText","append","flag","setRight","setLeft","setTop","setDown","addEventListener","swapWithEmpty","emptyCoordinateRow","emptyCoordinateColumn","row","column","currentMatrix","temp","setState","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAkC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,MAAM,EAAI,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD,EAAS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAT,EAAiB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAjB,CAFD;AAGT;AACAC,MAAAA,KAAK,EAAG;AAJC,KAAb;AAMH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,QAAIC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAZ;AACA,QAAIC,GAAJ;AAAA,QAASC,OAAT;AAAA,QAAkBC,GAAG,GAAG,CAAxB;;AACA,WAAM,EAAEA,GAAR,EAAa;AACTD,MAAAA,OAAO,GAAGE,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAG,CAAvB,CAAD,CAAlB;AACAF,MAAAA,GAAG,GAAGD,KAAK,CAACE,OAAD,CAAX;AACAF,MAAAA,KAAK,CAACE,OAAD,CAAL,GAAiBF,KAAK,CAACG,GAAD,CAAtB;AACCH,MAAAA,KAAK,CAACG,GAAD,CAAL,GAAaF,GAAb;AACJ;;AACD,QAAIM,SAAS,GAAG,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAG,CAApB,EAAwBA,CAAC,IAAE,CAA3B,EAA8B;AAC1BD,MAAAA,SAAS,CAACE,IAAV,CAAe,CAACT,KAAK,CAACQ,CAAD,CAAN,EAAUR,KAAK,CAACQ,CAAC,GAAC,CAAH,CAAf,EAAqBR,KAAK,CAACQ,CAAC,GAAC,CAAH,CAA1B,CAAf;AACH;;AACH,WAAOD,SAAP;AACD;;AAGDG,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKC,YAAL;AACA,SAAKC,sBAAL;AACH,GAhC6B,CAiC9B;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;;;AAEAC,EAAAA,kBAAkB,GAAE;AAChB,SAAKC,WAAL;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,GAAoD,EAApD;AACA,SAAKN,YAAL;AACA,SAAKC,sBAAL;AACH;;AAEDE,EAAAA,WAAW,GAAE;AACT,QAAG,KAAKlB,KAAL,CAAWC,MAAX,KAAsB,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD,EAAS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAT,EAAiB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAjB,CAAzB,EAAmD;AAC/CqB,MAAAA,KAAK,CAAC,4CAA4C,KAAKtB,KAAL,CAAWE,KAAvD,GAA+D,UAAhE,CAAL;AACAqB,MAAAA,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAP,EAAgC,IAAhC,CAAV;AACH;AACJ;;AAEDX,EAAAA,YAAY,GAAE;AACV;AACA,QAAId,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;;AACA,SAAI,IAAIW,CAAR,IAAaX,MAAb,EAAqB;AACjB,WAAI,IAAI0B,CAAR,IAAaf,CAAb,EAAgB;AACZ,aAAKgB,SAAL,CAAeD,CAAf;AACH;AACJ;AACJ;;AAEDC,EAAAA,SAAS,CAACC,EAAD,EAAI;AACT,QAAIC,OAAO,GAAGX,QAAQ,CAACY,aAAT,CAAuB,KAAvB,CAAd;AACAD,IAAAA,OAAO,CAACD,EAAR,GAAaA,EAAb;AACAC,IAAAA,OAAO,CAACE,SAAR,GAAqBH,EAAE,KAAK,CAAR,GAAa,UAAb,GAA0B,OAA9C;AACAC,IAAAA,OAAO,CAACG,SAAR,GAAqBJ,EAAE,KAAK,CAAR,GAAY,EAAZ,GAAgBA,EAApC;AACAV,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCc,MAAxC,CAA+CJ,OAA/C;AACH;;AAEDd,EAAAA,sBAAsB,GAAE;AAEpB,QAAIf,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIW,CAAJ;AAAA,QAAMe,CAAN;AAAA,QAAQQ,IAAI,GAAC,CAAb;;AACA,SAAIvB,CAAC,GAAG,CAAR,EAAYA,CAAC,IAAI,CAAjB,EAAqBA,CAAC,EAAtB,EAAyB;AACrB,WAAIe,CAAC,GAAG,CAAR,EAAYA,CAAC,IAAI,CAAjB,EAAqBA,CAAC,EAAtB,EAAyB;AACrB,YAAG1B,MAAM,CAACW,CAAD,CAAN,CAAUe,CAAV,MAAiB,CAApB,EAAuB;AACnBQ,UAAAA,IAAI,GAAC,CAAL;AACA;AACH;AACJ;;AACD,UAAGA,IAAI,KAAK,CAAZ,EAAe;AAClB,KAZmB,CAepB;;;AAEA,SAAKC,QAAL,CAAcxB,CAAd,EAAgBe,CAAhB;AACA,SAAKU,OAAL,CAAazB,CAAb,EAAee,CAAf;AACA,SAAKW,MAAL,CAAY1B,CAAZ,EAAce,CAAd;AACA,SAAKY,OAAL,CAAa3B,CAAb,EAAee,CAAf;AACH;;AAEDS,EAAAA,QAAQ,CAACxB,CAAD,EAAGe,CAAH,EAAM;AACV,QAAGA,CAAC,KAAK,CAAT,EAAY;AACZA,IAAAA,CAAC,IAAE,CAAH,CAFU,CAGV;;AACA,QAAIE,EAAE,GAAG,KAAK7B,KAAL,CAAWC,MAAX,CAAkBW,CAAlB,EAAqBe,CAArB,CAAT;AACAR,IAAAA,QAAQ,CAACC,cAAT,CAAwBS,EAAxB,EAA4BW,gBAA5B,CAA6C,OAA7C,EAAqD,MAAM,KAAKC,aAAL,CAAmB7B,CAAnB,EAAqBe,CAAC,GAAC,CAAvB,EAAyBf,CAAzB,EAA2Be,CAA3B,CAA3D;AACH;;AAEDU,EAAAA,OAAO,CAACzB,CAAD,EAAGe,CAAH,EAAM;AACT,QAAGA,CAAC,KAAK,CAAT,EAAY;AACZA,IAAAA,CAAC,IAAE,CAAH,CAFS,CAGT;;AACA,QAAIE,EAAE,GAAG,KAAK7B,KAAL,CAAWC,MAAX,CAAkBW,CAAlB,EAAqBe,CAArB,CAAT;AACAR,IAAAA,QAAQ,CAACC,cAAT,CAAwBS,EAAxB,EAA4BW,gBAA5B,CAA6C,OAA7C,EAAqD,MAAM,KAAKC,aAAL,CAAmB7B,CAAnB,EAAqBe,CAAC,GAAC,CAAvB,EAAyBf,CAAzB,EAA2Be,CAA3B,CAA3D;AACH;;AAEDY,EAAAA,OAAO,CAAC3B,CAAD,EAAGe,CAAH,EAAM;AACT,QAAGf,CAAC,KAAK,CAAT,EAAY;AACZA,IAAAA,CAAC,IAAE,CAAH,CAFS,CAGT;;AACA,QAAIiB,EAAE,GAAG,KAAK7B,KAAL,CAAWC,MAAX,CAAkBW,CAAlB,EAAqBe,CAArB,CAAT;AACAR,IAAAA,QAAQ,CAACC,cAAT,CAAwBS,EAAxB,EAA4BW,gBAA5B,CAA6C,OAA7C,EAAqD,MAAM,KAAKC,aAAL,CAAmB7B,CAAC,GAAC,CAArB,EAAuBe,CAAvB,EAAyBf,CAAzB,EAA2Be,CAA3B,CAA3D;AACH;;AACDW,EAAAA,MAAM,CAAC1B,CAAD,EAAGe,CAAH,EAAM;AACR,QAAGf,CAAC,KAAK,CAAT,EAAY;AACZA,IAAAA,CAAC,IAAE,CAAH,CAFQ,CAGR;;AACA,QAAIiB,EAAE,GAAG,KAAK7B,KAAL,CAAWC,MAAX,CAAkBW,CAAlB,EAAqBe,CAArB,CAAT;AACAR,IAAAA,QAAQ,CAACC,cAAT,CAAwBS,EAAxB,EAA4BW,gBAA5B,CAA6C,OAA7C,EAAqD,MAAM,KAAKC,aAAL,CAAmB7B,CAAC,GAAC,CAArB,EAAuBe,CAAvB,EAAyBf,CAAzB,EAA2Be,CAA3B,CAA3D;AACH;;AAEDc,EAAAA,aAAa,CAACC,kBAAD,EAAoBC,qBAApB,EAA0CC,GAA1C,EAA8CC,MAA9C,EAAsD;AAE/D,QAAIC,aAAa,GAAG,KAAK9C,KAAL,CAAWC,MAA/B;AAEA,QAAI8C,IAAI,GAAGD,aAAa,CAACF,GAAD,CAAb,CAAmBC,MAAnB,CAAX;AACAC,IAAAA,aAAa,CAACF,GAAD,CAAb,CAAmBC,MAAnB,IAA6BC,aAAa,CAACJ,kBAAD,CAAb,CAAkCC,qBAAlC,CAA7B;AACAG,IAAAA,aAAa,CAACJ,kBAAD,CAAb,CAAkCC,qBAAlC,IAA2DI,IAA3D;AAGA,SAAKC,QAAL,CAAc;AACV/C,MAAAA,MAAM,EAAG6C,aADC;AAEV;AACA5C,MAAAA,KAAK,EAAG,KAAKF,KAAL,CAAWE,KAAX,GAAiB;AAHf,KAAd;AAKH;;AAED+C,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AAAA,qCAAa,KAAKjD,KAAL,CAAWE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI;AAAK,YAAA,EAAE,EAAC,cAAR;AAAuB,YAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAgBH;;AAzK6B;;AA4KlC,eAAeL,UAAf","sourcesContent":["import {Component} from 'react';\nimport './tilepuzzle.css';\n\nclass tilepuzzle extends Component{ \n    constructor(props){\n        super(props);\n        this.state = {\n            // matrix : this.createRandomMatrix(),\n            matrix :  [[1,2,3],[4,5,6],[7,0,8]],\n            // coordinatesOfEmpty : []\n            count : 0\n        }\n    }\n\n    createRandomMatrix(){\n        let array = [0,1,2,3,4,5,6,7,8];\n        let tmp, current, top = 9;\n        while(--top) {\n            current = parseInt(Math.random() * (top + 1));\n            tmp = array[current];\n            array[current] = array[top];\n             array[top] = tmp;\n        }\n        let twoDArray = [];\n        for(let i = 0 ; i < 9 ; i+=3) {\n            twoDArray.push([array[i],array[i+1],array[i+2]]);\n        } \n      return twoDArray;\n    }\n\n\n    componentDidMount(){\n        // this.settingEmptyCoordinates();\n        this.DisplayBoxes();\n        this.addEventListnerToBoxes();\n    }\n    // settingEmptyCoordinates(){\n        // let matrix = this.state.matrix;\n        // let i,j,flag=0;\n        // for(i = 0 ; i <= 2 ; i++){\n        //     for(j = 0 ; j <= 2 ; j++){ \n        //         if(matrix[i][j] === 0) { \n        //             flag=1;\n        //             break;\n        //         }\n        //     }\n        //     if(flag === 1) break;\n        // }\n        // this.setState({\n    //         coordinatesOfEmpty : [i,j]\n    //     });\n    // }\n\n    componentDidUpdate(){\n        this.checkResult();\n        document.getElementById('boxWithBoxes').innerHTML = \"\";\n        this.DisplayBoxes();    \n        this.addEventListnerToBoxes();\n    }\n\n    checkResult(){\n        if(this.state.matrix === [[1,2,3],[4,5,6],[7,8,0]]){\n            alert(\"Voila,You have completed the puzzle in \" + this.state.count + \"moves :)\");\n            setTimeout(() => window.location.reload(),4000);\n        }\n    }\n\n    DisplayBoxes(){\n        // console.log(this.state.matrix);\n        let matrix = this.state.matrix;\n        for(let i of matrix) {\n            for(let j of i) { \n                this.createBox(j);        \n            }\n        }\n    }\n\n    createBox(id){\n        let element = document.createElement('div');\n        element.id = id;\n        element.className = (id === 0 )? \"emptyBox\" : \"boxes\";\n        element.innerText = (id === 0)? \"\": id;\n        document.getElementById('boxWithBoxes').append(element);\n    }\n\n    addEventListnerToBoxes(){\n\n        let matrix = this.state.matrix;\n        let i,j,flag=0;\n        for(i = 0 ; i <= 2 ; i++){\n            for(j = 0 ; j <= 2 ; j++){ \n                if(matrix[i][j] === 0) { \n                    flag=1;\n                    break;\n                }\n            }\n            if(flag === 1) break;\n        }\n    \n\n        // let [i,j] = [this.state.coordinatesOfEmpty[0],this.state.coordinatesOfEmpty[1]];\n        \n        this.setRight(i,j);\n        this.setLeft(i,j);\n        this.setTop(i,j);\n        this.setDown(i,j);\n    }\n\n    setRight(i,j) {\n        if(j === 2) return;\n        j+=1;\n        // console.log(\"right : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapWithEmpty(i,j-1,i,j));\n    }\n\n    setLeft(i,j) {\n        if(j === 0) return;\n        j-=1;\n        // console.log(\"left :\" + i + \" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapWithEmpty(i,j+1,i,j));\n    }\n\n    setDown(i,j) {\n        if(i === 2) return;\n        i+=1;\n        // console.log(\"down : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapWithEmpty(i-1,j,i,j));\n    }\n    setTop(i,j) {\n        if(i === 0) return;\n        i-=1;\n        // console.log(\"top : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapWithEmpty(i+1,j,i,j));\n    }\n\n    swapWithEmpty(emptyCoordinateRow,emptyCoordinateColumn,row,column) {\n\n        let currentMatrix = this.state.matrix;\n        \n        let temp = currentMatrix[row][column];\n        currentMatrix[row][column] = currentMatrix[emptyCoordinateRow][emptyCoordinateColumn];\n        currentMatrix[emptyCoordinateRow][emptyCoordinateColumn] = temp;\n       \n\n        this.setState({\n            matrix : currentMatrix,\n            // coordinatesOfEmpty : [row,column]\n            count : this.state.count+1,\n        });\n    }\n    \n    render(){\n        return(\n        <div>\n            <div className=\"GameComponents\">\n                <div className=\"heading\">\n                    <h1>3 X 3 Tile Puzzle Game</h1>\n                    <div className=\"gameDatas\">\n                        <h2>Moves : {this.state.count}</h2>\n                    </div>\n                </div>\n                <div className=\"mainBox\">\n                    <div id=\"boxWithBoxes\" className=\"innerBox\">\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default tilepuzzle;"]},"metadata":{},"sourceType":"module"}