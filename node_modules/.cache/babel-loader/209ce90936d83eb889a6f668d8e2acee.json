{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/tile-puzzle/src/tilepuzzle.js\";\nimport { Component, createElement } from 'react';\nimport './tilepuzzle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass tilepuzzle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matrix: this.createRandomMatrx()\n    };\n  }\n\n  createRandomMatrx() {\n    let array = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n    let tmp,\n        current,\n        top = 9;\n\n    while (--top) {\n      current = parseInt(Math.random() * (top + 1));\n      tmp = array[current];\n      array[current] = array[top];\n      array[top] = tmp;\n    }\n\n    let twoDArray = [];\n\n    for (let i = 0; i < 9; i += 3) {\n      twoDArray.push([array[i], array[i + 1], array[i + 2]]);\n    }\n\n    return twoDArray;\n  }\n\n  componentDidMount() {\n    console.log(this.state.matrix);\n  }\n\n  DisplayBoxes() {\n    let matrix = this.state.matrix;\n\n    for (let i of matrix) {\n      for (let j of i) {\n        this.createBox(j);\n      }\n    }\n  }\n\n  createBox(id) {\n    let element = document.createElement('div');\n    element.id = id;\n    element.className = id === 0 ? \"emptyBox\" : \"boxes\";\n    element.innerText = id === 0 ? \"\" : id;\n    document.getElementById('boxWithBoxes').append(element);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"boxWithBoxes\",\n          className: \"innerBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default tilepuzzle;","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/tile-puzzle/src/tilepuzzle.js"],"names":["Component","createElement","tilepuzzle","constructor","props","state","matrix","createRandomMatrx","array","tmp","current","top","parseInt","Math","random","twoDArray","i","push","componentDidMount","console","log","DisplayBoxes","j","createBox","id","element","document","className","innerText","getElementById","append","render"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,aAAnB,QAAwC,OAAxC;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAkC;AAE9BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG,KAAKC,iBAAL;AADA,KAAb;AAGH;;AAEDA,EAAAA,iBAAiB,GAAE;AACf,QAAIC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAZ;AACA,QAAIC,GAAJ;AAAA,QAASC,OAAT;AAAA,QAAkBC,GAAG,GAAG,CAAxB;;AACA,WAAM,EAAEA,GAAR,EAAa;AACTD,MAAAA,OAAO,GAAGE,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAG,CAAvB,CAAD,CAAlB;AACAF,MAAAA,GAAG,GAAGD,KAAK,CAACE,OAAD,CAAX;AACAF,MAAAA,KAAK,CAACE,OAAD,CAAL,GAAiBF,KAAK,CAACG,GAAD,CAAtB;AACCH,MAAAA,KAAK,CAACG,GAAD,CAAL,GAAaF,GAAb;AACJ;;AACD,QAAIM,SAAS,GAAG,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAG,CAApB,EAAwBA,CAAC,IAAE,CAA3B,EAA8B;AAC1BD,MAAAA,SAAS,CAACE,IAAV,CAAe,CAACT,KAAK,CAACQ,CAAD,CAAN,EAAUR,KAAK,CAACQ,CAAC,GAAC,CAAH,CAAf,EAAqBR,KAAK,CAACQ,CAAC,GAAC,CAAH,CAA1B,CAAf;AACH;;AACJ,WAAOD,SAAP;AACA;;AAEDG,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,MAAvB;AAEH;;AAEDe,EAAAA,YAAY,GAAE;AACV,QAAIf,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;;AACA,SAAI,IAAIU,CAAR,IAAaV,MAAb,EAAqB;AACjB,WAAI,IAAIgB,CAAR,IAAaN,CAAb,EAAgB;AACZ,aAAKO,SAAL,CAAeD,CAAf;AACH;AACJ;AACJ;;AAEDC,EAAAA,SAAS,CAACC,EAAD,EAAI;AACT,QAAIC,OAAO,GAAGC,QAAQ,CAACzB,aAAT,CAAuB,KAAvB,CAAd;AACAwB,IAAAA,OAAO,CAACD,EAAR,GAAaA,EAAb;AACAC,IAAAA,OAAO,CAACE,SAAR,GAAqBH,EAAE,KAAK,CAAR,GAAa,UAAb,GAA0B,OAA9C;AACAC,IAAAA,OAAO,CAACG,SAAR,GAAqBJ,EAAE,KAAK,CAAR,GAAY,EAAZ,GAAgBA,EAApC;AACAE,IAAAA,QAAQ,CAACG,cAAT,CAAwB,cAAxB,EAAwCC,MAAxC,CAA+CL,OAA/C;AAEH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAlE6B;;AAqElC,eAAe7B,UAAf","sourcesContent":["import {Component, createElement } from 'react';\nimport './tilepuzzle.css';\n\nclass tilepuzzle extends Component{ \n\n    constructor(props){\n        super(props);\n        this.state = {\n            matrix : this.createRandomMatrx(),\n        };\n    }\n\n    createRandomMatrx(){\n        let array = [0,1,2,3,4,5,6,7,8];\n        let tmp, current, top = 9;\n        while(--top) {\n            current = parseInt(Math.random() * (top + 1));\n            tmp = array[current];\n            array[current] = array[top];\n             array[top] = tmp;\n        }\n        let twoDArray = [];\n        for(let i = 0 ; i < 9 ; i+=3) {\n            twoDArray.push([array[i],array[i+1],array[i+2]]);\n        }\n     return twoDArray;\n    }\n\n    componentDidMount(){\n        console.log(this.state.matrix);\n    \n    }\n\n    DisplayBoxes(){\n        let matrix = this.state.matrix;\n        for(let i of matrix) {\n            for(let j of i) { \n                this.createBox(j);        \n            }\n        }\n    }\n\n    createBox(id){\n        let element = document.createElement('div');\n        element.id = id;\n        element.className = (id === 0 )? \"emptyBox\" : \"boxes\";\n        element.innerText = (id === 0)? \"\": id;\n        document.getElementById('boxWithBoxes').append(element);\n\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"mainBox\">\n                    <div id=\"boxWithBoxes\" className=\"innerBox\">\n                        {/* <div id=\"1\" className=\"boxes\"> 1 </div>\n                        <div id=\"2\" className=\"boxes\"> 2 </div>\n                        <div id=\"3\" className=\"boxes\"> 3 </div>\n                        <div id=\"4\" className=\"boxes\"> 4 </div>\n                        <div id=\"5\" className=\"boxes\"> 5 </div>\n                        <div id=\"6\" className=\"boxes\"> 6 </div>\n                        <div id=\"7\" className=\"boxes\"> 7 </div>\n                        <div id=\"8\" className=\"boxes\"> 8 </div>\n                        <div id=\"0\" className=\"emptyBox\"> </div> */}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default tilepuzzle;"]},"metadata":{},"sourceType":"module"}