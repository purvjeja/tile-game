{"ast":null,"code":"import _slicedToArray from\"/home/purvj/Documents/github-repositories/tile-puzzle React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import\"./tile-puzzle.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function TileGame(){var shuffle=function shuffle(){var array=[0,1,2,3,4,5,6,7,8];var top=array.length;var current,temp;while(--top){current=parseInt(Math.random()*(top+1));temp=array[top];array[top]=array[current];array[current]=temp;}return array;};var _useState=useState(shuffle),_useState2=_slicedToArray(_useState,2),arrayOfNumbers=_useState2[0],setArrayOfNumbers=_useState2[1];var _useState3=useState(arrayOfNumbers.indexOf(0)),_useState4=_slicedToArray(_useState3,2),emptyBoxPosition=_useState4[0],setEmptyBoxPosition=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),moveCount=_useState6[0],setMoveCount=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),StartTime=_useState8[0],setStartTime=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),handleGameTimeData=_useState10[0],setHandleGameTimeData=_useState10[1];useEffect(function(){if(moveCount===1)setStartTime(Date.now());if(JSON.stringify(arrayOfNumbers)===JSON.stringify([1,2,3,4,5,6,7,8,0])){alert(\"Voila, You finished the game!\");if(!handleGameTimeData)setHandleGameTimeData(true);}},[moveCount,arrayOfNumbers]);var CreateBox=function CreateBox(props){var className=props.item===0?\"zeroBox\":\"boxes\";var content=props.item===0?emptyBoxPosition===8?\"\":emptyBoxPosition+1:props.item;return/*#__PURE__*/_jsx(\"div\",{className:className,onClick:function onClick(){return swap(props.item);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"numberContent\",children:[\" \",content,\" \"]})});};var swap=function swap(id){var boxToSwapWith=arrayOfNumbers.indexOf(id);var checkColumnAdjacent=Math.abs(boxToSwapWith-emptyBoxPosition)===3;// for columns\nvar checkRowAdjacentRight=boxToSwapWith-emptyBoxPosition===1&&boxToSwapWith%3!==0?true:false;// for row right\nvar checkRowAdjacentLeft=boxToSwapWith-emptyBoxPosition===-1&&boxToSwapWith%3!==2?true:false;// for row left\nif(checkColumnAdjacent||checkRowAdjacentLeft||checkRowAdjacentRight){var tempArray=arrayOfNumbers;// swap method\nvar temp=tempArray[boxToSwapWith];tempArray[boxToSwapWith]=tempArray[emptyBoxPosition];tempArray[emptyBoxPosition]=temp;//setting state\nsetEmptyBoxPosition(boxToSwapWith);setMoveCount(moveCount+1);setArrayOfNumbers(tempArray);}};var receiveTime=function receiveTime(timeData){alert(\"Completed in \".concat(timeData.m,\" Minutes : \").concat(timeData.s,\" Seconds and in \").concat(moveCount,\" Moves!\"));window.location.reload();};return/*#__PURE__*/_jsx(\"div\",{className:\"renderArea\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"outerMainBox\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h1\",{children:[\"Moves - \",moveCount]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h2\",{children:[\"Time - \",/*#__PURE__*/_jsx(TimeCount,{startTime:StartTime,sendTime:receiveTime,status:handleGameTimeData})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mainBox\",children:/*#__PURE__*/_jsx(\"div\",{id:\"boxWithBoxes\",className:\"innerBox\",children:arrayOfNumbers.map(function(number){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CreateBox,{item:number})},number);})})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){window.location.reload();},children:\" Shuffle \"})]})});}var TimeCount=function TimeCount(props){var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),timeCount=_useState12[0],setTimeCount=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),timeShownStatus=_useState14[0],setTimeShowStatus=_useState14[1];if(timeCount===0&&props.startTime!==0)setInterval(function(){setTimeCount(parseInt((Date.now()-props.startTime)/1000));},1000);var timeMinutes=\"\".concat(timeCount/60<10?'0':'').concat(parseInt(timeCount/60));var timeSeconds=\"\".concat(timeCount%60<10?'0':'').concat(timeCount%60);if(props.status&&!timeShownStatus){props.sendTime({m:timeMinutes,s:timeSeconds});setTimeShowStatus(!timeShownStatus);}return\"\".concat(timeMinutes,\" Min : \").concat(timeSeconds,\" Sec\");};export default TileGame;","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/tile-puzzle React/src/tile-puzzle.js"],"names":["React","useEffect","useState","TileGame","shuffle","array","top","length","current","temp","parseInt","Math","random","arrayOfNumbers","setArrayOfNumbers","indexOf","emptyBoxPosition","setEmptyBoxPosition","moveCount","setMoveCount","StartTime","setStartTime","handleGameTimeData","setHandleGameTimeData","Date","now","JSON","stringify","alert","CreateBox","props","className","item","content","swap","id","boxToSwapWith","checkColumnAdjacent","abs","checkRowAdjacentRight","checkRowAdjacentLeft","tempArray","receiveTime","timeData","m","s","window","location","reload","map","number","TimeCount","timeCount","setTimeCount","timeShownStatus","setTimeShowStatus","startTime","setInterval","timeMinutes","timeSeconds","status","sendTime"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./tile-puzzle.css\";\nfunction TileGame() {\n    const shuffle = () => {\n        let array = [0,1,2,3,4,5,6,7,8];\n        let top = array.length; \n        let current,temp;\n        while(--top) {\n          current = parseInt(Math.random() * (top+1));\n          temp = array[top];\n          array[top] = array[current];\n          array[current] = temp;\n        }\n        return array;\n      }\n  \n    let [arrayOfNumbers,setArrayOfNumbers] = useState(shuffle); \n    let [emptyBoxPosition,setEmptyBoxPosition] = useState(arrayOfNumbers.indexOf(0));\n    let [moveCount,setMoveCount] = useState(0);\n    let [StartTime,setStartTime] = useState(0);\n    let [handleGameTimeData,setHandleGameTimeData] = useState(false);\n\n    useEffect(() =>  {\n      if(moveCount === 1) setStartTime(Date.now());\n      if(JSON.stringify(arrayOfNumbers) === JSON.stringify([1,2,3,4,5,6,7,8,0])) {\n        alert(`Voila, You finished the game!`);\n        if(!(handleGameTimeData)) setHandleGameTimeData(true);\n       }  \n      },[moveCount,arrayOfNumbers]\n    );\n\n    const CreateBox = (props) => {\n        const className = (props.item === 0) ? \"zeroBox\" : \"boxes\" ;   \n        const content = (props.item === 0 ) ? (emptyBoxPosition === 8) ? \"\" : emptyBoxPosition + 1 : props.item;\n        return (\n            <div className={className} onClick={() => swap(props.item)}>\n               <div className=\"numberContent\"> {content} </div>\n           </div>\n        )\n    }\n\n    const swap = (id) => {\n\n      const boxToSwapWith = arrayOfNumbers.indexOf(id);\n\n      const checkColumnAdjacent = (Math.abs(boxToSwapWith - emptyBoxPosition) === 3);                                         // for columns\n      const checkRowAdjacentRight = ((boxToSwapWith - emptyBoxPosition === 1) && (boxToSwapWith%3 !== 0)) ?  true : false;    // for row right\n      const checkRowAdjacentLeft = ((boxToSwapWith - emptyBoxPosition === -1) && (boxToSwapWith%3 !== 2)) ? true : false;     // for row left\n\n      if(checkColumnAdjacent || checkRowAdjacentLeft || checkRowAdjacentRight) {\n        \n        let tempArray = arrayOfNumbers\n\n        // swap method\n        let temp = tempArray[boxToSwapWith];\n        tempArray[boxToSwapWith] = tempArray[emptyBoxPosition];\n        tempArray[emptyBoxPosition] = temp;\n        \n        //setting state\n        setEmptyBoxPosition(boxToSwapWith);\n        setMoveCount(moveCount + 1);\n        setArrayOfNumbers(tempArray); \n      }\n    }\n\n    const receiveTime = (timeData) => {\n      alert(`Completed in ${timeData.m} Minutes : ${timeData.s} Seconds and in ${moveCount} Moves!`);\n      window.location.reload();\n    }\n\n    return (\n    <div className=\"renderArea\">\n     <div className=\"outerMainBox\">\n      <div><h1>Moves - {moveCount}</h1></div> \n      <div><h2>Time - <TimeCount startTime = {StartTime} sendTime = {receiveTime} status={handleGameTimeData} /></h2></div> \n      <div className=\"mainBox\" >\n        <div id=\"boxWithBoxes\" className=\"innerBox\">\n          {arrayOfNumbers.map((number) => <div key={number} ><CreateBox item={number} /></div>)}      \n        </div>\n      </div>\n    <button \n    onClick={() => { \n      window.location.reload();\n    }}\n    > Shuffle </button>\n    </div>\n   </div>\n  );\n}\n\nconst TimeCount = (props) => {\n  let [timeCount,setTimeCount] = useState(0);\n  let [timeShownStatus,setTimeShowStatus] = useState(false); \n  if(timeCount === 0 && props.startTime !== 0) \n    setInterval(() => { \n      setTimeCount(parseInt((Date.now() - props.startTime)/1000)) \n    },1000);   \n    \n  let timeMinutes = `${(timeCount/60 < 10) ? '0' : ''}${parseInt(timeCount/60)}`;\n  let timeSeconds =  `${(timeCount%60 < 10) ? '0' : ''}${timeCount%60}`;\n  if(props.status && !(timeShownStatus)) { \n    props.sendTime({m : timeMinutes, s : timeSeconds}); \n    setTimeShowStatus(!timeShownStatus);\n  }\n  \n  return `${timeMinutes} Min : ${timeSeconds} Sec` \n}\nexport default TileGame;"]},"metadata":{},"sourceType":"module"}