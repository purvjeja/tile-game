{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/tile-puzzle/src/tilepuzzle.js\";\nimport { Component } from 'react';\nimport './tilepuzzle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass tilepuzzle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matrix: this.createRandomMatrx()\n    };\n  }\n\n  createRandomMatrx() {\n    let array = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n    let tmp,\n        current,\n        top = 9;\n\n    while (--top) {\n      current = parseInt(Math.random() * (top + 1));\n      tmp = array[current];\n      array[current] = array[top];\n      array[top] = tmp;\n    }\n\n    let twoDArray = [];\n\n    for (let i = 0; i < 9; i += 3) {\n      twoDArray.push([array[i], array[i + 1], array[i + 2]]);\n    }\n\n    return twoDArray;\n  }\n\n  componentDidMount() {\n    console.log(this.state.matrix);\n    this.DisplayBoxes();\n    this.addEventListnerToBoxes();\n  }\n\n  DisplayBoxes() {\n    let matrix = this.state.matrix;\n\n    for (let i of matrix) {\n      for (let j of i) {\n        this.createBox(j);\n      }\n    }\n  }\n\n  createBox(id) {\n    let element = document.createElement('div');\n    element.id = id;\n    element.className = id === 0 ? \"emptyBox\" : \"boxes\";\n    element.innerText = id === 0 ? \"\" : id;\n    document.getElementById('boxWithBoxes').append(element);\n  }\n\n  addEventListnerToBoxes() {\n    let matrix = this.state.matrix;\n    let i,\n        j,\n        flag = 0;\n\n    for (i = 0; i <= 2; i++) {\n      for (j = 0; j <= 2; j++) {\n        if (matrix[i][j] === 0) {\n          flag = 1;\n          break;\n        }\n      }\n\n      if (flag === 1) break;\n    }\n\n    let index = [i, j];\n    this.setRight(index);\n    this.setLeft(index);\n    this.setTop(index);\n    this.setDown(index);\n  }\n\n  setRight(index) {\n    if (index[1] === 2) return;\n    index[1] += 1;\n    console.log(\"right : \" + index);\n    let id = this.state.matrix[index[0]][index[1]];\n    document.getElementById(id).addEventListener('click', () => alert(\"done right\"));\n  }\n\n  setLeft(index) {\n    if (index[1] === 0) return;\n    index[1] -= 1;\n    console.log(\"left : \" + index);\n    let id = this.state.matrix[index[0]][index[1]];\n    document.getElementById(id).addEventListener('click', () => alert(\"done left\"));\n  }\n\n  setDown(index) {\n    if (index[0] === 2) return;\n    index[0] += 1;\n    console.log(\"down : \" + index);\n    let id = this.state.matrix[index[0]][index[1]];\n    document.getElementById(id).addEventListener('click', () => alert(\"done down\"));\n  }\n\n  setTop(index) {\n    if (index[0] === 0) return;\n    index[0] -= 1;\n    console.log(\"top : \" + index);\n    let id = this.state.matrix[index[0]][index[1]];\n    document.getElementById(id).addEventListener('click', () => alert(\"done up\"));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"boxWithBoxes\",\n          className: \"innerBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default tilepuzzle;","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/tile-puzzle/src/tilepuzzle.js"],"names":["Component","tilepuzzle","constructor","props","state","matrix","createRandomMatrx","array","tmp","current","top","parseInt","Math","random","twoDArray","i","push","componentDidMount","console","log","DisplayBoxes","addEventListnerToBoxes","j","createBox","id","element","document","createElement","className","innerText","getElementById","append","flag","index","setRight","setLeft","setTop","setDown","addEventListener","alert","render"],"mappings":";AAAA,SAAQA,SAAR,QAAyB,OAAzB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAkC;AAE9BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG,KAAKC,iBAAL;AADA,KAAb;AAGH;;AAEDA,EAAAA,iBAAiB,GAAE;AACf,QAAIC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAZ;AACA,QAAIC,GAAJ;AAAA,QAASC,OAAT;AAAA,QAAkBC,GAAG,GAAG,CAAxB;;AACA,WAAM,EAAEA,GAAR,EAAa;AACTD,MAAAA,OAAO,GAAGE,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAG,CAAvB,CAAD,CAAlB;AACAF,MAAAA,GAAG,GAAGD,KAAK,CAACE,OAAD,CAAX;AACAF,MAAAA,KAAK,CAACE,OAAD,CAAL,GAAiBF,KAAK,CAACG,GAAD,CAAtB;AACCH,MAAAA,KAAK,CAACG,GAAD,CAAL,GAAaF,GAAb;AACJ;;AACD,QAAIM,SAAS,GAAG,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAG,CAApB,EAAwBA,CAAC,IAAE,CAA3B,EAA8B;AAC1BD,MAAAA,SAAS,CAACE,IAAV,CAAe,CAACT,KAAK,CAACQ,CAAD,CAAN,EAAUR,KAAK,CAACQ,CAAC,GAAC,CAAH,CAAf,EAAqBR,KAAK,CAACQ,CAAC,GAAC,CAAH,CAA1B,CAAf;AACH;;AACJ,WAAOD,SAAP;AACA;;AAEDG,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,MAAvB;AACA,SAAKe,YAAL;AACA,SAAKC,sBAAL;AACH;;AAEDD,EAAAA,YAAY,GAAE;AACV,QAAIf,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;;AACA,SAAI,IAAIU,CAAR,IAAaV,MAAb,EAAqB;AACjB,WAAI,IAAIiB,CAAR,IAAaP,CAAb,EAAgB;AACZ,aAAKQ,SAAL,CAAeD,CAAf;AACH;AACJ;AACJ;;AAEDC,EAAAA,SAAS,CAACC,EAAD,EAAI;AACT,QAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAF,IAAAA,OAAO,CAACD,EAAR,GAAaA,EAAb;AACAC,IAAAA,OAAO,CAACG,SAAR,GAAqBJ,EAAE,KAAK,CAAR,GAAa,UAAb,GAA0B,OAA9C;AACAC,IAAAA,OAAO,CAACI,SAAR,GAAqBL,EAAE,KAAK,CAAR,GAAY,EAAZ,GAAgBA,EAApC;AACAE,IAAAA,QAAQ,CAACI,cAAT,CAAwB,cAAxB,EAAwCC,MAAxC,CAA+CN,OAA/C;AACH;;AAEDJ,EAAAA,sBAAsB,GAAE;AACpB,QAAIhB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIU,CAAJ;AAAA,QAAMO,CAAN;AAAA,QAAQU,IAAI,GAAC,CAAb;;AACA,SAAIjB,CAAC,GAAG,CAAR,EAAYA,CAAC,IAAI,CAAjB,EAAqBA,CAAC,EAAtB,EAAyB;AACrB,WAAIO,CAAC,GAAG,CAAR,EAAYA,CAAC,IAAI,CAAjB,EAAqBA,CAAC,EAAtB,EAAyB;AACrB,YAAGjB,MAAM,CAACU,CAAD,CAAN,CAAUO,CAAV,MAAiB,CAApB,EAAuB;AACnBU,UAAAA,IAAI,GAAC,CAAL;AACA;AACH;AACJ;;AACD,UAAGA,IAAI,KAAK,CAAZ,EAAe;AAClB;;AACD,QAAIC,KAAK,GAAG,CAAClB,CAAD,EAAGO,CAAH,CAAZ;AACA,SAAKY,QAAL,CAAcD,KAAd;AACA,SAAKE,OAAL,CAAaF,KAAb;AACA,SAAKG,MAAL,CAAYH,KAAZ;AACA,SAAKI,OAAL,CAAaJ,KAAb;AACH;;AAEDC,EAAAA,QAAQ,CAACD,KAAD,EAAO;AACX,QAAGA,KAAK,CAAC,CAAD,CAAL,KAAa,CAAhB,EAAmB;AACnBA,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAU,CAAV;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAac,KAAzB;AACA,QAAIT,EAAE,GAAG,KAAKpB,KAAL,CAAWC,MAAX,CAAkB4B,KAAK,CAAC,CAAD,CAAvB,EAA4BA,KAAK,CAAC,CAAD,CAAjC,CAAT;AACAP,IAAAA,QAAQ,CAACI,cAAT,CAAwBN,EAAxB,EAA4Bc,gBAA5B,CAA6C,OAA7C,EAAqD,MAAMC,KAAK,CAAC,YAAD,CAAhE;AACH;;AAEDJ,EAAAA,OAAO,CAACF,KAAD,EAAO;AACV,QAAGA,KAAK,CAAC,CAAD,CAAL,KAAa,CAAhB,EAAmB;AACnBA,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAU,CAAV;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYc,KAAxB;AACA,QAAIT,EAAE,GAAG,KAAKpB,KAAL,CAAWC,MAAX,CAAkB4B,KAAK,CAAC,CAAD,CAAvB,EAA4BA,KAAK,CAAC,CAAD,CAAjC,CAAT;AACAP,IAAAA,QAAQ,CAACI,cAAT,CAAwBN,EAAxB,EAA4Bc,gBAA5B,CAA6C,OAA7C,EAAqD,MAAMC,KAAK,CAAC,WAAD,CAAhE;AACH;;AAEDF,EAAAA,OAAO,CAACJ,KAAD,EAAO;AACV,QAAGA,KAAK,CAAC,CAAD,CAAL,KAAa,CAAhB,EAAmB;AACnBA,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAU,CAAV;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYc,KAAxB;AACA,QAAIT,EAAE,GAAG,KAAKpB,KAAL,CAAWC,MAAX,CAAkB4B,KAAK,CAAC,CAAD,CAAvB,EAA4BA,KAAK,CAAC,CAAD,CAAjC,CAAT;AACAP,IAAAA,QAAQ,CAACI,cAAT,CAAwBN,EAAxB,EAA4Bc,gBAA5B,CAA6C,OAA7C,EAAqD,MAAMC,KAAK,CAAC,WAAD,CAAhE;AACH;;AACDH,EAAAA,MAAM,CAACH,KAAD,EAAO;AACT,QAAGA,KAAK,CAAC,CAAD,CAAL,KAAa,CAAhB,EAAmB;AACnBA,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAU,CAAV;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWc,KAAvB;AACA,QAAIT,EAAE,GAAG,KAAKpB,KAAL,CAAWC,MAAX,CAAkB4B,KAAK,CAAC,CAAD,CAAvB,EAA4BA,KAAK,CAAC,CAAD,CAAjC,CAAT;AACAP,IAAAA,QAAQ,CAACI,cAAT,CAAwBN,EAAxB,EAA4Bc,gBAA5B,CAA6C,OAA7C,EAAqD,MAAMC,KAAK,CAAC,SAAD,CAAhE;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA3G6B;;AA8GlC,eAAevC,UAAf","sourcesContent":["import {Component } from 'react';\nimport './tilepuzzle.css';\n\nclass tilepuzzle extends Component{ \n\n    constructor(props){\n        super(props);\n        this.state = {\n            matrix : this.createRandomMatrx(),\n        };\n    }\n\n    createRandomMatrx(){\n        let array = [0,1,2,3,4,5,6,7,8];\n        let tmp, current, top = 9;\n        while(--top) {\n            current = parseInt(Math.random() * (top + 1));\n            tmp = array[current];\n            array[current] = array[top];\n             array[top] = tmp;\n        }\n        let twoDArray = [];\n        for(let i = 0 ; i < 9 ; i+=3) {\n            twoDArray.push([array[i],array[i+1],array[i+2]]);\n        }\n     return twoDArray;\n    }\n\n    componentDidMount(){\n        console.log(this.state.matrix);\n        this.DisplayBoxes();\n        this.addEventListnerToBoxes();\n    }\n\n    DisplayBoxes(){\n        let matrix = this.state.matrix;\n        for(let i of matrix) {\n            for(let j of i) { \n                this.createBox(j);        \n            }\n        }\n    }\n\n    createBox(id){\n        let element = document.createElement('div');\n        element.id = id;\n        element.className = (id === 0 )? \"emptyBox\" : \"boxes\";\n        element.innerText = (id === 0)? \"\": id;\n        document.getElementById('boxWithBoxes').append(element);\n    }\n\n    addEventListnerToBoxes(){\n        let matrix = this.state.matrix;\n        let i,j,flag=0;\n        for(i = 0 ; i <= 2 ; i++){\n            for(j = 0 ; j <= 2 ; j++){ \n                if(matrix[i][j] === 0) { \n                    flag=1;\n                    break;\n                }\n            }\n            if(flag === 1) break;\n        }\n        let index = [i,j];\n        this.setRight(index);\n        this.setLeft(index);\n        this.setTop(index);\n        this.setDown(index);\n    }\n\n    setRight(index){\n        if(index[1] === 2) return;\n        index[1]+=1;\n        console.log(\"right : \" + index);\n        let id = this.state.matrix[index[0]][index[1]];\n        document.getElementById(id).addEventListener('click',() => alert(\"done right\"));\n    }\n\n    setLeft(index){\n        if(index[1] === 0) return;\n        index[1]-=1;\n        console.log(\"left : \" + index);\n        let id = this.state.matrix[index[0]][index[1]];\n        document.getElementById(id).addEventListener('click',() => alert(\"done left\"));\n    }\n\n    setDown(index){\n        if(index[0] === 2) return;\n        index[0]+=1;\n        console.log(\"down : \" + index);\n        let id = this.state.matrix[index[0]][index[1]];\n        document.getElementById(id).addEventListener('click',() => alert(\"done down\"));\n    }\n    setTop(index){\n        if(index[0] === 0) return;\n        index[0]-=1;\n        console.log(\"top : \" + index);\n        let id = this.state.matrix[index[0]][index[1]];\n        document.getElementById(id).addEventListener('click',() => alert(\"done up\"));\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"mainBox\">\n                    <div id=\"boxWithBoxes\" className=\"innerBox\">\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default tilepuzzle;"]},"metadata":{},"sourceType":"module"}