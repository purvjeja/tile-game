{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/tile-puzzle/src/tilepuzzle.js\";\nimport { Component } from 'react';\nimport './tilepuzzle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass tilepuzzle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matrix: [],\n      emptyCoordinates: []\n    };\n  }\n\n  createRandomMatrix() {\n    let array = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n    let tmp,\n        current,\n        top = 9;\n\n    while (--top) {\n      current = parseInt(Math.random() * (top + 1));\n      tmp = array[current];\n      array[current] = array[top];\n      array[top] = tmp;\n    }\n\n    let twoDArray = [];\n\n    for (let i = 0; i < 9; i += 3) {\n      twoDArray.push([array[i], array[i + 1], array[i + 2]]);\n    }\n\n    return twoDArray;\n  }\n\n  findEmptyCoordinates() {\n    let matrix = this.state.matrix;\n    let i,\n        j,\n        flag = 0;\n\n    for (i = 0; i <= 2; i++) {\n      for (j = 0; j <= 2; j++) {\n        if (matrix[i][j] === 0) {\n          flag = 1;\n          break;\n        }\n      }\n\n      if (flag === 1) break;\n    }\n\n    return [i, j];\n  }\n\n  componentDidMount() {\n    console.log(this.state.matrix);\n    this.setState({\n      matrix: this.createRandomMatrix()\n    });\n    console.log(this.state.matrix);\n    this.DisplayBoxes();\n    this.addEventListnerToBoxes();\n    this.fi();\n  }\n\n  fi() {\n    console.log(this.state.emptyCoordinates);\n  }\n\n  DisplayBoxes() {\n    let matrix = this.state.matrix;\n\n    for (let i of matrix) {\n      for (let j of i) {\n        this.createBox(j);\n      }\n    }\n  }\n\n  createBox(id) {\n    let element = document.createElement('div');\n    element.id = id;\n    element.className = id === 0 ? \"emptyBox\" : \"boxes\";\n    element.innerText = id === 0 ? \"\" : id;\n    document.getElementById('boxWithBoxes').append(element);\n  }\n\n  addEventListnerToBoxes() {\n    let matrix = this.state.matrix;\n    let i,\n        j,\n        flag = 0;\n\n    for (i = 0; i <= 2; i++) {\n      for (j = 0; j <= 2; j++) {\n        if (matrix[i][j] === 0) {\n          flag = 1;\n          break;\n        }\n      }\n\n      if (flag === 1) break;\n    } // console.log(i + \" - \" + j);\n\n\n    this.setRight(i, j);\n    this.setLeft(i, j);\n    this.setTop(i, j);\n    this.setDown(i, j);\n  }\n\n  setRight(i, j) {\n    if (j === 2) return;\n    j += 1; // console.log(\"right : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapEmpty(i, j));\n  }\n\n  setLeft(i, j) {\n    if (j === 0) return;\n    j -= 1; // console.log(\"left :\" + i + \" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapEmpty(i, j));\n  }\n\n  setDown(i, j) {\n    if (i === 2) return;\n    i += 1; // console.log(\"down : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapEmpty(i, j));\n  }\n\n  setTop(i, j) {\n    if (i === 0) return;\n    i -= 1; // console.log(\"top : \" + i +\" , \" + j);\n\n    let id = this.state.matrix[i][j];\n    document.getElementById(id).addEventListener('click', () => this.swapEmpty(i, j));\n  }\n\n  swapEmpty(row, column) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"boxWithBoxes\",\n          className: \"innerBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default tilepuzzle;","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/tile-puzzle/src/tilepuzzle.js"],"names":["Component","tilepuzzle","constructor","props","state","matrix","emptyCoordinates","createRandomMatrix","array","tmp","current","top","parseInt","Math","random","twoDArray","i","push","findEmptyCoordinates","j","flag","componentDidMount","console","log","setState","DisplayBoxes","addEventListnerToBoxes","fi","createBox","id","element","document","createElement","className","innerText","getElementById","append","setRight","setLeft","setTop","setDown","addEventListener","swapEmpty","row","column","render"],"mappings":"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","sourcesContent":["import {Component} from 'react';\nimport './tilepuzzle.css';\n\nclass tilepuzzle extends Component{ \n    constructor(props){\n        super(props);\n        this.state = {\n            matrix : [],\n            emptyCoordinates : [],\n        };\n    }\n\n    createRandomMatrix(){\n        let array = [0,1,2,3,4,5,6,7,8];\n        let tmp, current, top = 9;\n        while(--top) {\n            current = parseInt(Math.random() * (top + 1));\n            tmp = array[current];\n            array[current] = array[top];\n             array[top] = tmp;\n        }\n        let twoDArray = [];\n        for(let i = 0 ; i < 9 ; i+=3) {\n            twoDArray.push([array[i],array[i+1],array[i+2]]);\n        } \n      return twoDArray;\n    }\n\n    findEmptyCoordinates(){\n        let matrix = this.state.matrix;\n        let i,j,flag=0;\n        for(i = 0 ; i <= 2 ; i++){\n            for(j = 0 ; j <= 2 ; j++){ \n                if(matrix[i][j] === 0) { \n                    flag=1;\n                    break;\n                }\n            }\n            if(flag === 1) break;\n        }\n        return [i,j];\n    }\n\n    componentDidMount(){\n        console.log(this.state.matrix);\n        this.setState({ \n            matrix : this.createRandomMatrix(),\n        });\n        console.log(this.state.matrix);\n\n        this.DisplayBoxes();\n        this.addEventListnerToBoxes();\n        this.fi();\n    }\n\n    fi(){\n        console.log(this.state.emptyCoordinates);\n    }\n\n    DisplayBoxes(){\n        let matrix = this.state.matrix;\n        for(let i of matrix) {\n            for(let j of i) { \n                this.createBox(j);        \n            }\n        }\n    }\n\n    createBox(id){\n        let element = document.createElement('div');\n        element.id = id;\n        element.className = (id === 0 )? \"emptyBox\" : \"boxes\";\n        element.innerText = (id === 0)? \"\": id;\n        document.getElementById('boxWithBoxes').append(element);\n    }\n\n    addEventListnerToBoxes(){\n        let matrix = this.state.matrix;\n        let i,j,flag=0;\n        for(i = 0 ; i <= 2 ; i++){\n            for(j = 0 ; j <= 2 ; j++){ \n                if(matrix[i][j] === 0) { \n                    flag=1;\n                    break;\n                }\n            }\n            if(flag === 1) break;\n        }\n        \n        // console.log(i + \" - \" + j);\n        this.setRight(i,j);\n        this.setLeft(i,j);\n        this.setTop(i,j);\n        this.setDown(i,j);\n    }\n\n    setRight(i,j) {\n        if(j === 2) return;\n        j+=1;\n        // console.log(\"right : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapEmpty(i,j));\n    }\n\n    setLeft(i,j) {\n        if(j === 0) return;\n        j-=1;\n        // console.log(\"left :\" + i + \" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapEmpty(i,j));\n    }\n\n    setDown(i,j) {\n        if(i === 2) return;\n        i+=1;\n        // console.log(\"down : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapEmpty(i,j));\n    }\n    setTop(i,j) {\n        if(i === 0) return;\n        i-=1;\n        // console.log(\"top : \" + i +\" , \" + j);\n        let id = this.state.matrix[i][j];\n        document.getElementById(id).addEventListener('click',() => this.swapEmpty(i,j));\n    }\n\n    swapEmpty(row,column) {\n\n    }\n    render(){\n        return(\n            <div>\n                <div className=\"mainBox\">\n                    <div id=\"boxWithBoxes\" className=\"innerBox\">\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default tilepuzzle;"]},"metadata":{},"sourceType":"module"}